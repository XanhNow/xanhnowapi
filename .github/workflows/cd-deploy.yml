name: CD - Deploy to vm-dotnet-api (self-hosted)

on:
  push:
    branches: [ "master" ]         # deploy khi push lên master
  workflow_dispatch:                # cho phép chạy tay

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

env:
  API_PROJECT: src/AuthService.Api/AuthService.Api.csproj
  LINUX_OUT: publish/linux-x64

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-dotnet@v4
        with: { dotnet-version: '8.0.x' }

      - name: Cache NuGet
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.sln','**/*.csproj','**/*.props','**/*.targets','global.json') }}
          restore-keys: ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore XanhNow.Auth.sln

      - name: Build (Release)
        run: dotnet build XanhNow.Auth.sln -c Release --no-restore

      - name: Publish self-contained (linux-x64, single file)
        run: |
          dotnet publish $API_PROJECT -c Release -r linux-x64 --self-contained true \
            -p:PublishSingleFile=true \
            -p:IncludeNativeLibrariesForSelfExtract=true \
            -p:EnableCompressionInSingleFile=true \
            -o $LINUX_OUT
          tar -C $LINUX_OUT -czf app.tar.gz .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-linux-x64
          path: app.tar.gz
          if-no-files-found: error

  deploy:
    # chạy trên VM bạn đã cài self-hosted runner
    runs-on: [ self-hosted, linux, vm-dotnet-api ]
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app-linux-x64
          path: ./artifact

      - name: Deploy & restart service
        run: |
          set -euo pipefail
          APP_DIR=/opt/xanhnow-auth
          RELEASE=$APP_DIR/releases/${GITHUB_SHA}

          sudo mkdir -p "$RELEASE"
          sudo tar -xzf ./artifact/app.tar.gz -C "$RELEASE"
          sudo chmod +x "$RELEASE/AuthService.Api"

          # Tạo env nếu chưa có (bạn sẽ sửa giá trị thật sau)
          if [ ! -f /etc/xanhnow-auth.env ]; then
            sudo tee /etc/xanhnow-auth.env >/dev/null <<'EOF'
ASPNETCORE_URLS=http://127.0.0.1:5000
# ConnectionStrings__Default=...
# Jwt__SecretKey=...
# Redis__ConnectionString=...
# Kafka__BootstrapServers=...
EOF
            sudo chmod 640 /etc/xanhnow-auth.env
          fi

          # Tạo systemd service nếu chưa có
          if [ ! -f /etc/systemd/system/xanhnow-auth.service ]; then
            sudo tee /etc/systemd/system/xanhnow-auth.service >/dev/null <<'EOF'
[Unit]
Description=xanhnow-auth .NET 8 API
After=network.target
Wants=network-online.target

[Service]
WorkingDirectory=/opt/xanhnow-auth/current
ExecStart=/opt/xanhnow-auth/current/AuthService.Api
EnvironmentFile=/etc/xanhnow-auth.env
Restart=always
RestartSec=5
User=deploy
ProtectSystem=full
PrivateTmp=true
NoNewPrivileges=true

[Install]
WantedBy=multi-user.target
EOF
            sudo systemctl daemon-reload
            sudo systemctl enable xanhnow-auth
          fi

          # Trỏ current về bản mới và restart
          sudo ln -sfn "$RELEASE" "$APP_DIR/current"
          sudo systemctl restart xanhnow-auth
          sleep 2
          sudo systemctl --no-pager -l status xanhnow-auth || true
